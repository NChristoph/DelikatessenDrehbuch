@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" asp-route-id="0" asp-controller="NewRecipes" asp-action="Index" style="color:#FFFDD0">Rezept Hochladen</a>
        </li> 
        <li class="nav-item">
            <a class="nav-link " asp-area="" asp-controller="MyRecipes" asp-action="Index" style="color:#FFFDD0">Mein Bereich</a>
        </li>
        <li class="nav-item">
            <form class="form-inline " asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" style="color:#D4AF37">
                <button type="submit" class="nav-link btn btn-link " style="color:#FFFDD0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login" style="color:#FFFDD0">Rezept hochladen</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " asp-area="Identity" asp-page="/Account/Register" style="color:#FFFDD0">Registrieren</a>
        </li>
    }
</ul>
